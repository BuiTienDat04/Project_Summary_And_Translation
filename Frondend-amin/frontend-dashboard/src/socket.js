import { io } from "socket.io-client";

// ðŸŸ¢ Láº¥y userId tá»« localStorage
const getUserId = () => {
    const user = JSON.parse(localStorage.getItem("user"));
    return user ? user.id : null;
};

// Khá»Ÿi táº¡o Socket.IO
const socket = io("https://admin.pdfsmart.online", {
    transports: ["websocket", "polling"],
    query: { userId: getUserId() },
    autoConnect: false, // Chá»‰ káº¿t ná»‘i khi cáº§n
});

// ðŸŸ¢ Káº¿t ná»‘i WebSocket khi user Ä‘Äƒng nháº­p
export const connectSocket = () => {
    socket.io.opts.query = { userId: getUserId() }; // Cáº­p nháº­t userId
    socket.connect();
};

// ðŸ”´ Ngáº¯t káº¿t ná»‘i WebSocket khi user logout
export const disconnectSocket = () => {
    socket.emit("manualDisconnect"); // ThÃ´ng bÃ¡o offline tá»›i server
    socket.disconnect();
};

// ðŸŸ¡ Láº¯ng nghe sá»± kiá»‡n Ä‘Ã³ng tab, máº¥t káº¿t ná»‘i máº¡ng, vÃ  thÃ´ng bÃ¡o offline
const notifyOffline = () => {
    if (socket.connected) {
        socket.emit("manualDisconnect");
    }
};

// Láº¯ng nghe sá»± kiá»‡n Ä‘Ã³ng tab hoáº·c chuyá»ƒn trang
window.addEventListener("beforeunload", notifyOffline);

// Láº¯ng nghe sá»± kiá»‡n máº¥t káº¿t ná»‘i máº¡ng
window.addEventListener("offline", notifyOffline);

export { socket }; // Xuáº¥t socket Ä‘á»ƒ cÃ³ thá»ƒ sá»­ dá»¥ng á»Ÿ nÆ¡i khÃ¡c
export default socket; // Giá»¯ láº¡i export máº·c Ä‘á»‹nh Ä‘á»ƒ thuáº­n tiá»‡n trong viá»‡c import
